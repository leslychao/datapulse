### ========================
### ACCOUNT — CREATE (201)
### ========================
POST {{host}}/api/accounts
Content-Type: application/json

{
  "name": "Test Account"
}

> {%
  client.test("Account CREATE: 201", function () {
    client.assert(response.status === 201, "expected 201, got " + response.status);
    var b = response.body || {};
    client.assert(b.id !== undefined, "missing id");
    client.assert(typeof b.name === "string" && b.name.length > 0, "invalid name");
    client.global.set("accountId", String(b.id || ""));
  });
%}

### ACCOUNT — UPDATE (200)
PUT {{host}}/api/accounts/{{accountId}}
Content-Type: application/json

{
  "name": "Test Account — updated"
}

> {%
  client.test("Account UPDATE: 200", function () {
    client.assert(response.status === 200, "expected 200, got " + response.status);
    var b = response.body || {};
    client.assert(String(b.id) === String(client.global.get("accountId")), "id mismatch");
    client.assert(/updated/i.test(b.name), "name not updated");
  });
%}

### ACCOUNT — NEGATIVE: blank name → 400
POST {{host}}/api/accounts
Content-Type: application/json

{
  "name": " "
}

> {%
  client.test("Account CREATE blank name: 400", function () {
    client.assert(response.status === 400, "expected 400, got " + response.status);
    var b = response.body || {};
    var msg = (b && b.message) || (b && b.error) ||
        (Array.isArray(b.errors) && b.errors[0] && (b.errors[0].message || b.errors[0])) || "";
    client.assert(/name|обязательно|пуст/i.test(msg), "no validation hint: " + msg);
  });
%}

### ACCOUNT — NEGATIVE: name > 32 → 400
POST {{host}}/api/accounts
Content-Type: application/json

{
  "name": "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx"
}

> {%
  client.test("Account CREATE long name: 400", function () {
    client.assert(response.status === 400, "expected 400, got " + response.status);
    var b = response.body || {};
    var msg = (b && b.message) || (b && b.error) ||
        (Array.isArray(b.errors) && b.errors[0] && (b.errors[0].message || b.errors[0])) || "";
    client.assert(/длина|max/i.test(msg), "no length hint: " + msg);
  });
%}

### ACCOUNT — NEGATIVE: not found → 404
PUT {{host}}/api/accounts/9999999
Content-Type: application/json

{
  "name": "Not found"
}

> {%
  client.test("Account UPDATE not found: 404", function () {
    client.assert(response.status === 404, "expected 404, got " + response.status);
    var b = response.body || {};
    var msg = (b && b.message) || (b && b.error) ||
        (Array.isArray(b.errors) && b.errors[0] && (b.errors[0].message || b.errors[0])) || "";
    client.assert(/не\sнайден/i.test(msg), "no 'not found' hint: " + msg);
  });
%}

### ACCOUNT — NEGATIVE: path id ≠ body id → 4xx
PUT {{host}}/api/accounts/123456
Content-Type: application/json

{
  "id": 654321,
  "name": "Mismatch"
}

> {%
  client.test("Account UPDATE id mismatch: 4xx", function () {
    client.assert(String(response.status).startsWith("4"), "expected 4xx, got " + response.status);
  });
%}

### ACCOUNT — NEGATIVE: duplicate name (case-insensitive) → 400
POST {{host}}/api/accounts
Content-Type: application/json

{
  "name": "test account — updated"
}

> {%
  client.test("Account CREATE duplicate: 400", function () {
    client.assert(response.status === 400, "expected 400, got " + response.status);
    var b = response.body || {};
    var msg = (b && b.message) || (b && b.error) || "";
    client.assert(/уже\sсуществ|exists/i.test(msg), "no duplicate hint: " + msg);
  });
%}

### ACCOUNT — UPDATE: same name different case → 200
PUT {{host}}/api/accounts/{{accountId}}
Content-Type: application/json

{
  "name": "TEST ACCOUNT — UPDATED"
}

> {%
  client.test("Account UPDATE same-name-different-case: 200", function () {
    client.assert(response.status === 200, "expected 200, got " + response.status);
    var b = response.body || {};
    client.assert(/UPDATED/i.test(b.name), "name not applied");
  });
%}

### ========================
### ACCOUNT-CONNECTION — CREATE (WB) → 201
### ========================
POST {{host}}/api/account-connections
Content-Type: application/json

{
  "accountId": {{accountId}},
  "marketplace": "WILDBERRIES",
  "credentials": { "token": "xxx" },
  "active": true
}

> {%
  client.test("AC CREATE WB: 201", function () {
    client.assert(response.status === 201, "expected 201, got " + response.status);
    var b = response.body || {};
    client.global.set("acIdWb", String(b.id || ""));
    client.assert(b.marketplace === "WILDBERRIES", "wrong marketplace");
    client.assert(b.active === true, "active not true");
  });
%}

### AC — UPDATE: change marketplace to FREE (WB → OZON) → 200
# Меняем тип у существующего WB на OZON, пока другого OZON ещё нет — должно пройти.
PUT {{host}}/api/account-connections/{{acIdWb}}
Content-Type: application/json

{
  "marketplace": "OZON",
  "credentials": {
    "clientId": "cid",
    "apiKey": "akey"
  },
  "active": true
}

> {%
  client.test("AC UPDATE change marketplace to free: 200", function () {
    client.assert(response.status === 200, "expected 200, got " + response.status);
    var b = response.body || {};
    client.assert(b.marketplace === "OZON", "marketplace not changed to OZON");
    // зафиксируем id этого OZON-подключения (бывшего WB)
    client.global.set("acIdMovedToOzon", String(client.global.get("acIdWb")));
  });
%}

### AC — CREATE (WB again) → 201
# Создаём новое WB-подключение после того, как старое стало OZON.
POST {{host}}/api/account-connections
Content-Type: application/json

{
  "accountId": {{accountId}},
  "marketplace": "WILDBERRIES",
  "credentials": { "token": "eyJhbGciOiJFUzI1NiIsImtpZCI6IjIwMjUwOTA0djEiLCJ0eXAiOiJKV1QifQ.eyJhY2MiOjIsImVudCI6MSwiZXhwIjoxNzc3MDU5Mzg0LCJpZCI6IjAxOWExNTI1LWI1ZmEtNzNiZi04ZWIwLTE3YjMwYjk1MGY2MCIsImlpZCI6MTI3MTk4NDEzLCJvaWQiOjI1MDA2MDg2MywicyI6MCwic2lkIjoiZTBhZWUxM2QtOTQ2Mi00Mjk5LTk2OTctNGY4YjRjYzQzMDY5IiwidCI6dHJ1ZSwidWlkIjoxMjcxOTg0MTN9.eURulaP5UTqegdGH86XJqRX2qnBao0jnX5DFCa_wUKzku84MCJF-IWyO6cdSokf6oVn5LPqtQkn-zLONagFvcg" },
  "active": true
}

> {%
  client.test("AC CREATE WB again: 201", function () {
    client.assert(response.status === 201, "expected 201, got " + response.status);
    var b = response.body || {};
    client.global.set("acIdWb", String(b.id || ""));
    client.assert(b.marketplace === "WILDBERRIES", "wrong marketplace (WB)");
  });
%}

### AC — NEGATIVE: create duplicate OZON for same account → 400
# Уже есть OZON (acIdMovedToOzon). Повторное создание OZON должно упасть.
POST {{host}}/api/account-connections
Content-Type: application/json

{
  "accountId": {{accountId}},
  "marketplace": "OZON",
  "credentials": { "clientId": "dup", "apiKey": "dup" },
  "active": true
}

> {%
  client.test("AC duplicate marketplace (OZON): 400", function () {
    client.assert(response.status === 400, "expected 400, got " + response.status);
    var b = response.body || {};
    var msg = (b && b.message) || (b && b.error) || "";
    client.assert(/существует|exists/i.test(msg), "no duplicate hint: " + msg);
  });
%}

### AC — NEGATIVE: change WB → OZON when OZON already exists → 400
# Пробуем поменять свежесозданный WB на OZON — должен быть конфликт с acIdMovedToOzon.
PUT {{host}}/api/account-connections/{{acIdWb}}
Content-Type: application/json

{
  "marketplace": "OZON",
  "credentials": {
    "clientId": "any",
    "apiKey": "any"
  },
  "active": true
}

> {%
  client.test("AC UPDATE change marketplace to existing: 400", function () {
    client.assert(response.status === 400, "expected 400, got " + response.status);
    var b = response.body || {};
    var msg = (b && b.message) || (b && b.error) || "";
    client.assert(/существует|exists/i.test(msg), "no already-exists hint: " + msg);
  });
%}

### AC — UPDATE (OZON) toggle active → 200
PUT {{host}}/api/account-connections/{{acIdMovedToOzon}}
Content-Type: application/json

{
  "active": false
}

> {%
  client.test("AC UPDATE OZON active=false: 200", function () {
    client.assert(response.status === 200, "expected 200, got " + response.status);
    var b = response.body || {};
    client.assert(b.active === false, "active not false");
  });
%}

### AC — NEGATIVE: create for unknown accountId → 404
POST {{host}}/api/account-connections
Content-Type: application/json

{
  "accountId": 999999999,
  "marketplace": "OZON",
  "credentials": {
    "clientId": "x",
    "apiKey": "y"
  },
  "active": true
}

> {%
  client.test("AC CREATE unknown account: 404", function () {
    client.assert(response.status === 404, "expected 404, got " + response.status);
    var b = response.body || {};
    var msg = (b && b.message) || (b && b.error) || "";
    client.assert(/аккаунт|account|не\sнайден/i.test(msg), "no account-not-found hint: " + msg);
  });
%}

### AC — NEGATIVE: WB token blank → 400
POST {{host}}/api/account-connections
Content-Type: application/json

{
  "accountId": {{accountId}},
  "marketplace": "WILDBERRIES",
  "credentials": { "token": " " },
  "active": true
}

> {%
  client.test("AC WB token blank: 400", function () {
    client.assert(response.status === 400, "expected 400, got " + response.status);
    var b = response.body || {};
    var msg = (b && b.message) || (b && b.error) || "";
    client.assert(/token|обязател/i.test(msg), "no wb token hint: " + msg);
  });
%}

### AC — NEGATIVE: OZON creds blank → 400
POST {{host}}/api/account-connections
Content-Type: application/json

{
  "accountId": {{accountId}},
  "marketplace": "OZON",
  "credentials": { "clientId": " ", "apiKey": " " },
  "active": true
}

> {%
  client.test("AC OZON blank creds: 400", function () {
    client.assert(response.status === 400, "expected 400, got " + response.status);
    var b = response.body || {};
    var msg = (b && b.message) || (b && b.error) || "";
    client.assert(/clientId|apiKey|обязател/i.test(msg), "no ozon creds hint: " + msg);
  });
%}

### ACCOUNT — NEGATIVE: delete not found → 404
DELETE {{host}}/api/accounts/9999999

> {%
  client.test("Account DELETE not found: 404", function () {
    client.assert(response.status === 404, "expected 404, got " + response.status);
    var b = response.body || {};
    var msg = (b && b.message) || (b && b.error) || "";
    client.assert(/не\sнайден/i.test(msg), "no 'not found' hint: " + msg);
  });
%}

### ========================
### CLEANUP
### ========================

### CLEANUP — DELETE OZON (moved from WB)
DELETE {{host}}/api/account-connections/{{acIdMovedToOzon}}

> {%
  client.test("AC DELETE OZON (moved): 204", function () {
    client.assert(response.status === 204, "expected 204, got " + response.status);
  });
%}

### CLEANUP — DELETE WB (second one)
DELETE {{host}}/api/account-connections/{{acIdWb}}

> {%
  client.test("AC DELETE WB: 204", function () {
    client.assert(response.status === 204, "expected 204, got " + response.status);
  });
%}

### CLEANUP — DELETE ACCOUNT
DELETE {{host}}/api/accounts/{{accountId}}

> {%
  client.test("Account DELETE: 204", function () {
    client.assert(response.status === 204, "expected 204, got " + response.status);
  });
%}
